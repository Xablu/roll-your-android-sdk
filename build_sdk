#!/bin/bash

# this script builds an Android SDK from scratch, providing all the necessary stuff to build a Xamarin Android app.

ARG=$1
MACOSX_TOOLS="https://dl.google.com/android/repository/tools_r25.2.5-macosx.zip"
LINUX_TOOLS="https://dl.google.com/android/repository/tools_r25.2.5-linux.zip"

WORK_DIR=$( mktemp -d /tmp/androidsdkXXXXX )
CUR_DIR=$( pwd )
SDK_MANAGER="$WORK_DIR/tools/bin/sdkmanager"

# which platform?
PLATFORM=
test $( uname -a | grep -ci 'Darwin Kernel' ) -eq 1 && PLATFORM="macosx"
test $( uname -a | grep -ci 'Linux' ) -eq 1         && PLATFORM="linux"

if [ -z $PLATFORM ]
then
   echo
   echo "Platform not supported. This script must be run on macOS or Linux!"
   echo
   exit 1
fi

if [ -z $( which java 2>/dev/null ) ]
then
   echo
   echo "Can't find java. Please install it and re-run the script"
   echo
   exit 1
fi

if [ -z $( which zip 2>/dev/null ) ]
then
   echo
   echo "Can't find zip. Please install it and re-run the script"
   echo
   exit 1
fi

if [ -z $ARG ]
then
   echo
   echo "Target platform not provided. Run this script with 'linux', 'macosx' or 'windows' as argument."
   echo
   exit 1
fi

test "$PLATFORM" = "macosx" && TOOLS=$MACOSX_TOOLS
test "$PLATFORM" = "linux"  && TOOLS=$LINUX_TOOLS

TARGET_PLATFORM=
test $( echo $ARG | grep -ci 'linux' ) -eq 1 &&   TARGET_PLATFORM="linux"
test $( echo $ARG | grep -ci 'macos' ) -eq 1 &&   TARGET_PLATFORM="macosx"
test $( echo $ARG | grep -ci 'windows' ) -eq 1 && TARGET_PLATFORM="windows"
if [ -z $TARGET_PLATFORM ]
then
   echo
   echo "Wrong target platform provided. Run this script with 'linux', 'macosx' or 'windows' as argument."
   echo
   exit 1
fi

export REPO_OS_OVERRIDE=$TARGET_PLATFORM



run_mgr()
{
   echo -n "... downloading $@ "
   #$SDK_MANAGER --sdk_root=$WORK_DIR/targetsdk "$@"
   $SDK_MANAGER --verbose --sdk_root=$WORK_DIR/targetsdk "$@"
}




echo
echo "Build Android SDK for platform $TARGET_PLATFORM"
echo "* downloading Android tools to: $WORK_DIR"
curl -s $TOOLS -o $WORK_DIR/$( basename $TOOLS )
echo "* unzipping Android tools"
unzip -q $WORK_DIR/$( basename $TOOLS ) -d $WORK_DIR

# the usual stuff
run_mgr "tools"
run_mgr "platform-tools"
run_mgr "build-tools;26.0.1"
run_mgr "platforms;android-26"
run_mgr "platforms;android-25"
run_mgr "extras;android;m2repository"
run_mgr "extras;google;m2repository"
run_mgr "extras;google;google_play_services" 
# run_mgr "ndk-bundle"

# now zip it
echo "* zipping SDK..."
SDK_SUFFIX="$( date +%Y%m%d )-$TARGET_PLATFORM"
cd $WORK_DIR
mv targetsdk androidsdk-$SDK_SUFFIX
ZIP_FILE="androidsdk-$SDK_SUFFIX.zip"
zip -qr $CUR_DIR/$ZIP_FILE androidsdk-$SDK_SUFFIX
cd $CUR_DIR

echo
echo "* Your Android SDK is completed: $ZIP_FILE"
echo

exit 0

